sudo passwd pi
sudo passwd root

sync
df -h
mount
htop


sudo dpkg -i VNC-Server-6.5.0-Linux-ARM.deb 
sudo apt-get install -f
sudo systemctl enable vncserver-x11-serviced.service
sudo systemctl start vncserver-x11-serviced.service
sudo apt install -f

vncserver
sudo apt purge realvnc
sudo apt purge VNC-Server-6.5.0-Linux-ARM.deb 
sudo apt purge realvnc-vnc-server
sudo apt autoremove
sudo apt-get install tightvncserver
tightvncserver
ifconfig -a
ls
tightvncserver -kill :1
vim ~/.vnc/xstartup 
vncserver -geometry 1280x800
sudo vim /etc/systemd/system/vncserver@.service
sudo ln -s /etc/systemd/system/vncserver@.service /etc/systemd/system/multi-user.target.wants/vncserver@1.service
sudo reboot
vncviewer :5901 or :1

xstartup

----------------
#!/bin/sh

xrdb $HOME/.Xresources
xsetroot -solid grey
#x-terminal-emulator -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" &
#x-window-manager &
# Fix to make GNOME work
export XKL_XMODMAP_DISABLE=1
/etc/X11/Xsession
lxterminal &
/usr/bin/lxsession -s LXDE &
------------------

sudo gedit /etc/apt/sources.list
fcitx fcitx-bin fcitx-config-common fcitx-config-gtk fcitx-data fcitx-frontend-all
sudo npi-config
cat /etc/asound.conf
sudo apt-get install gparted
sudo vim /etc/apt/sources.list
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bk
sudo vim /etc/apt/sources.list
sudo apt-get update
cat /etc/apt/sources.list
sudo reboot
fcitx-autostart 
htop
cat /proc/cpuinfo 



cd /var/
find . -type d -name "partial"
ll cache/apt/archives/partial
sudo ll cache/apt/archives/partial
sudo ls cache/apt/archives/partial
sudo ls -l cache/apt/archives
sudo chown root cache/apt/archives/partial/
sudo ls -l cache/apt/archives
sudo apt-get install aptitude
sudo chown _apt cache/apt/archives/partial/
sudo apt-get install vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope
sudo apt-get install vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope apt-transport-https
sudo apt-get install vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope apt-transport-https apt-transport-https
sudo apt-get install vim ctags vim-doc vim-scripts exuberant-ctags libtemplate-perl ispell vim-addon-manager cscope apt-transport-https ttf-mscorefonts-installer
sudo chown _apt /var/lib/update-notifier/package-data-downloads/partial/
sudo apt-get install lxterminal
sudo apt-get upgrade

####
sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4
sudo apt-get install ibus-pinyin
/usr/lib/ibus-pinyin/ibus-setup-pinyin
sudo apt-get install ibus-sunpinyin
/usr/lib/ibus-sunpinyin/ibus-setup-sunpinyin
sudo  im-config
fcitx-autostart 
####

sudo dpkg --configure -a
 

sudo systemctl disable hostapd.service
sudo apt update

sudo apt list --upgradable
sudo apt upgrade
sudo apt autoremove

sudo update-alternatives --config x-terminal-emulator
/usr/bin/lxterminal

sudo apt install iptux
sudo /etc/init.d/networking restart
set static ip in network-manager


sudo gedit /etc/bash.bashrc
open bash_comletion


sudo gedit /etc/environment
gedit ~/.xinitrc

export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx


ref
1、编辑配置文件:sudo gedit ~/.profile
添加：
export XMODIFIERS=@im=fcitx
export XIM=fcitx
export XIM_PROGRAM=fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx

2、Lib依赖项：sudo apt-get install fcitx-frontend-qt4 fcitx-frontend-qt5 fcitx-libs-qt fcitx-libs-qt5 libfcitx-qt0 libfcitx-qt5-1 

3、快捷键占用

4、WPS中输入法无法切换尝试解决：
#!/usr/bin/sh
export XMODIFIERS="@im=fcitx"
export GTK_IM_MODULE="fcitx"
export QT_IM_MODULE="fcitx"
/usr/bin/wpp "$1"

sudo apt purge fcitx*

The following packages will be REMOVED:
  fcitx* fcitx-bin* fcitx-config-common* fcitx-config-gtk* fcitx-data*
  fcitx-frontend-all* fcitx-frontend-gtk2* fcitx-frontend-gtk3*
  fcitx-frontend-qt4* fcitx-frontend-qt5* fcitx-googlepinyin*
  fcitx-module-cloudpinyin* fcitx-module-dbus* fcitx-module-kimpanel*
  fcitx-module-lua* fcitx-module-x11* fcitx-modules* fcitx-sunpinyin*
  fcitx-ui-classic*

sudo apt autoremove



sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4
im-config -s ibus

export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus

export GTK_IM_MODULE=ibus
export QT4_IM_MODULE=xim
export QT_IM_MODULE=xim
export XMODIFIERS=@im=ibus



gedit ~/.xinitrc
----------
export GTK_IM_MODULE=ibus
export QT4_IM_MODULE=ibus
export QT_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
ibus-daemon -drx
or
ibus-daemon -drx --panel /usr/lib/ibus/ibus-ui-gtk3
-----------
添加英文和中文拼音输入法
修改切换热键ctrl+space（好像没有生效）
在输入法的reference里面设置出事输入法为英文




sudo apt install mplayer





sudo apt-get install curl wget apt-transport-https ca-certificates

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
apt-key fingerprint 0EBFCD88

sudo apt-get remove docker docker-engine docker.io containerd runc

curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh

!!arch=arm64


sudo docker run hello-world
sudo usermod -aG docker $USER
newgrp docker
docker run hello-world

docker version




W: Download is performed unsandboxed as root as file '/var/cache/apt/archives/partial/containerd.io_1.2.10-3_arm64.deb' couldn't be accessed by user '_apt'. - pkgAcquire::Run (13: Permission denied)

(03:37:33 PM) debian-dell:
解决办法：(没有用)
sudo chown _apt /var/cache/apt/archives/partial





sudo apt install nethogs





docker run --rm httpd:2.4 cat /usr/local/apache2/conf/httpd.conf > my-httpd.conf

DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
    Require all granted
</Directory>

#AddDefaultCharset UTF-8
AddDefaultCharset off
#AddDefaultCharset GBK
#AddDefaultCharset GB2312
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

#IndexOptions Charset=GB2312
IndexOptions Charset=UTF-8


docker run -d --name my-httpd -p 8080:80 -v /media/pi:/usr/local/apache2/htdocs/ httpd
docker cp my-httpd.conf my-httpd:/usr/local/apache2/conf/httpd.conf
sudo chmod 755 /media/pi
docker restart my-httpd


docker pull php:7.2-apache
docker run -d --name my-apache-php -p 8080:80 -v /media/pi:/var/www/html php:7.2-apache
docker cp my-apache-php:/etc/apache2/apache2.conf .
docker exec -it my-apache-php /bin/bash
docker cp apache2.conf my-apache-php:/etc/apache2/apache2.conf
docker restart my-apache-php


sudo apt install -y samba samba-common python-glade2 system-config-samba


设置移动硬盘samba共享
sudo gedit /etc/samba/smb.conf
[dell]
    comment = Network Logon Service
    path = /media/andy
    guest ok = yes
    read only = no
    writeable = yes
    browseable = yes



//sudo update-rc.d samba defaults
sudo useradd andy
sudo smbpasswd -a andy
sudo /etc/init.d/nmbd restart
sudo /etc/init.d/smbd restart






sudo apt install vsftpd
sudo gedit /etc/vsftpd.conf

sudo service vsftpd restart
sudo service vsftpd status

sudo gedit /etc/shells 
/bin/sh
/bin/dash
/bin/bash
/bin/rbash
/bin/ksh93
/usr/bin/tmux
/bin/csh
/bin/sash
/bin/tcsh
/usr/bin/tcsh
/usr/sbin/nologin     ++
/usr/bin/screen


sudo useradd andy -d /media/pi -s /usr/sbin/nologin
sudo passwd andy

sudo gedit /etc/vsftpd.conf
local_enable=YES
write_enable=YES
chroot_local_user=YES
chroot_list_enable=YES
chroot_list_file=/etc/vsftpd.chroot_list
allow_writeable_chroot=YES
userlist_enable=YES
userlist_deny=NO
userlist_file=/etc/allowed_users
seccomp_sandbox=NO
user_config_dir=/etc/vsftpd/vsftpd_user_conf


mkdir -p /etc/vsftpd/vsftpd_user_conf
sudo gedit /etc/vsftpd/vsftpd_user_conf/pi
sudo gedit /etc/vsftpd/vsftpd_user_conf/andy
write_enable=YES
cmds_denied=DELE,RNFR


/etc/group
andy:x:1001:pi





源码编译安装cmocka
https://cmocka.org/files/1.1/cmocka-1.1.5.tar.xz
cd cmocka-1.1.5
mkdir build
cd build
cmake -DWITH_STATIC_LIB=on ..
make
sudo make install


编译安装gtest
git clone https://github.com/google/googletest
cd googletest
mkdir build
cd build
cmake ..
make
sudo make install










